import{d as e,c as o,a,F as r,b as s,o as t,e as n}from"./vendor.0cfe8c95.js";var i=e({name:"App",setup(){const e={audio:!1,video:!0},o=(e,o)=>{document.querySelector("#errorMsg").innerHTML+=`<p>${e}</p>`,void 0!==o&&console.error(o)};return{handleInit:async()=>{try{(o=>{const a=document.querySelector("video"),r=o.getVideoTracks();console.log("Got stream with constraints:",e),console.log(`Using video device: ${r[0].label}`),a.srcObject=o})(await navigator.mediaDevices.getUserMedia(e))}catch(r){"PermissionDeniedError"===(a=r).name&&o("Permissions have not been granted to use your camera and microphone, you need to allow the page access to your devices in order for the demo to work."),o(`getUserMedia error: ${a.name}`,a)}var a}}}});const c=a("h1",null,[a("a",{href:"//webrtc.github.io/samples/",title:"WebRTC samples homepage"},"WebRTC samples"),a("span",null,"getUserMedia")],-1),d=a("video",{autoplay:"",playsinline:""},null,-1),l=s('<div id="errorMsg"></div><p class="warning"><strong>Warning:</strong> if you&#39;re not using headphones, pressing play will cause feedback. </p><p> Display the video stream from <code>getUserMedia()</code> in a video element. </p><p> The <code>MediaStream</code> object <code>stream</code> passed to the <code>getUserMedia()</code> callback is in global scope, so you can inspect it from the console. </p><a href="https://github.com/webrtc/samples/tree/gh-pages/src/content/getusermedia/gum" title="View source for this page on GitHub" id="viewSource">View source on GitHub</a>',5);i.render=function(e,s,n,i,p,u){return t(),o(r,null,[c,d,a("button",{onClick:s[0]||(s[0]=o=>e.handleInit())},"Open camera"),l],64)},n(i).mount("#app");
